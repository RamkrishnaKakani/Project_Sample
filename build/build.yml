trigger:
  branches:
    include:
      - development
      - master
      - feature_*
  paths:
    include:
     - source/*
pr:
  branches:
    include:
      - development
      - master
      - Feature_*
      - feature_*
  paths:
    include:
     - source/*

resources:
  repositories:
    - repository: CMTeam
      type : github
      endpoint: MyGithubServiceConnection
      name: RamkrishnaKakani/CMTeam
      ref : master
      
variables:
  solution: '**/HelloWorld.sln'
  env : 'dev'
  project : 'todobyram'
  version : '001'

  ${{ if and( ne(variables['Build.Reason'], 'Manually Triggered')) }}:
    TerraformDestroy : True
    TerraformApply : False

stages:
- stage: DotNetCompliation
  pool:
    vmImage: 'windows-latest'
  jobs:
  - job :
    steps:
    - task: NuGetToolInstaller@1
    - task: NuGetCommand@2
      displayName: 'Run Nuget Restore'
      inputs:
        command: 'restore'
        restoreSolution: '$(solution)'

    - task: DotNetCoreCLI@2
      displayName: Publish Solution
      inputs:
        command: 'publish'
        publishWebProjects: true
        projects: $(solution)
        arguments: '--configuration Release /p:DebugType=None /p:DebugSymbols=false --output $(Build.SourcesDirectory)\build\zip\Project_Sample -v d'
        modifyOutputPath: false
        zipAfterPublish: true
        workingDirectory: '$(Build.SourcesDirectory)'

    - task: PublishBuildArtifacts@1
      displayName: Publish zip file
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\build\zip\Project_Sample'
        ArtifactName: 'drop'
        publishLocation: 'Container'
      condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'PullRequest'))
    
    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: 'Write-Host "##vso[build.addbuildtag]trigger"'
      condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'PullRequest'))
  

- stage: Infra
  jobs:
  - job :
    pool:
      vmImage: 'ubuntu-latest'  

    steps:    
    - checkout: CMTeam
      displayName : 'Download Infra Repo'

    - template: ../infra/Template/terraform_deploy.yml
      parameters:
        environment: "$(env)"
        working_dir: "$(Build.SourcesDirectory)/CMTeam/infra"
        serviceconn_name : "Terraform_ServiceConnection"
        project_name : "$(project)"
        version : "$(version)"    