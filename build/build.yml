trigger:
  branches:
    include:
      - development
      - master
  paths:
    include:
     - source/*
pr:
  branches:
    include:
      - development
      - master
      - Feature_*
      - feature_*
  paths:
    include:
     - source/*

resources:
  repositories:
    - repository: CMTeam
      type : github
      endpoint: MyGithubServiceConnection
      name: RamkrishnaKakani/CMTeam
      ref : master
      
variables:
  solution: '**/HelloWorld.sln'

stages:
- stage: DotNetCompliation
  pool:
    vmImage: 'windows-latest'
  jobs:
  - job :
    steps:
    - task: NuGetToolInstaller@1
      displayName: 'Install Dependancies'
      #condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'PullRequest'))

    - task: NuGetCommand@2
      displayName: 'Run Nuget Restore'
      inputs:
        command: 'restore'
        restoreSolution: '$(solution)'
      #condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'PullRequest'))

    - task: DotNetCoreCLI@2
      displayName: Publish Solution
      inputs:
        command: 'publish'
        publishWebProjects: true
        projects: $(solution)
        arguments: '--configuration Release /p:DebugType=None /p:DebugSymbols=false --output $(Build.SourcesDirectory)\build\zip\Project_Sample -v d'
        modifyOutputPath: false
        zipAfterPublish: true
        workingDirectory: '$(Build.SourcesDirectory)'
      #condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'PullRequest'))

    - task: PublishBuildArtifacts@1
      displayName: Publish zip file
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\build\zip\Project_Sample'
        ArtifactName: 'drop'
        publishLocation: 'Container'
      #condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'PullRequest'))

    - task: UniversalPackages@0
      enabled: false
      inputs:
        command: 'publish'
        publishDirectory: '$(Build.ArtifactStagingDirectory)'
        feedsToUsePublish: 'internal'
        vstsFeedPublish: '726985fd-b209-4af8-b565-720a49aa5497/6aa1bc76-ebeb-4bb3-b223-c17426a42ea2'
        vstsFeedPackagePublish: 'zip'
        versionOption: 'custom'
        versionPublish: '0.0.2'
        packagePublishDescription: 'POC To Publish To Azure Feed'

    - task: UniversalPackages@0
      inputs:
        command: 'publish'
        publishDirectory: '$(Build.ArtifactStagingDirectory)'
        feedsToUsePublish: 'internal'
        #vstsFeedPublish: 'Feed_2'
        vstsFeed: 'Feed_2'
        vstsFeedPackagePublish: 'zips'
        versionOption: 'custom'
        versionPublish: '0.0.1'