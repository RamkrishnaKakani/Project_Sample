trigger:
  branches:
    include:
      - development
      - master
  paths:
    include:
     - source/*
    exclude:
      - build/*
      - infra/*
      - deploy/*
pr:
  branches:
    include:
      - development
      - master
      - Feature_*
      - feature_*
  paths:
    include:
     - source/*
    exclude:
      - build/*
      - infra/*
      - deploy/*

variables:
  solution: '**/HelloWorld.sln'

steps:
- task: NuGetToolInstaller@1

- task: NuGetCommand@2
  displayName: 'Run Nuget Restore'
  inputs:
    command: 'restore'
    restoreSolution: '$(solution)'

- task: DotNetCoreCLI@2
  displayName: Publish Solution
  inputs:
    command: 'publish'
    publishWebProjects: true
    projects: $(solution)
    arguments: '--configuration Release /p:DebugType=None /p:DebugSymbols=false --output $(Build.SourcesDirectory)\build\zip\Project_Sample -v d'
    modifyOutputPath: false
    zipAfterPublish: true
    workingDirectory: '$(Build.SourcesDirectory)'
  condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'PullRequest'))
    

- task: PublishBuildArtifacts@1
  enabled: false
  displayName: Publish zip file
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)\build\zip\Project_Sample'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: PublishPipelineArtifact@1
  displayName: Publish zip file
  inputs:
    targetPath: '$(Build.SourcesDirectory)\build\zip\Project_Sample'
    artifact: 'drop'
    publishLocation: 'pipeline'
  condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'PullRequest'))

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'Write-Host "##vso[build.addbuildtag]trigger"'
  condition: and(succeeded(), in(variables['Build.Reason'], 'IndividualCI', 'PullRequest'))
